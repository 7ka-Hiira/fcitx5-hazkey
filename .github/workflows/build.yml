name: Build

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Swift Environment
      run: |
        wget https://download.swift.org/swift-5.10.1-release/ubuntu2204/swift-5.10.1-RELEASE/swift-5.10.1-RELEASE-ubuntu22.04.tar.gz
        tar xf swift-5.10.1-RELEASE-ubuntu22.04.tar.gz
        sudo mv swift-5.10.1-RELEASE-ubuntu22.04 /usr/share/swift
        echo "PATH=/usr/share/swift/usr/bin:$PATH" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential cmake gettext fakeroot libvulkan-dev libfcitx5core-dev libfcitx5config-dev libfcitx5utils-dev

    - name: Create Directories
      run: |
        mkdir -p $GITHUB_WORKSPACE/build
        mkdir -p $GITHUB_WORKSPACE/workdir
        mkdir -p $GITHUB_WORKSPACE/packages

    - name: Build Hazkey
      run: |
        cd $GITHUB_WORKSPACE/build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr .. || true
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr ..
        make -j$(nproc)
        make install DESTDIR=$GITHUB_WORKSPACE/workdir

    - name: Create deb package
      run: |
        cd $GITHUB_WORKSPACE/workdir
        mkdir -p ./DEBIAN
        cat $GITHUB_WORKSPACE/debian/control > ./DEBIAN/control
        fakeroot dpkg-deb --build . $GITHUB_WORKSPACE/packages

    - name: Create tar.gz package
      run: |
        cd $GITHUB_WORKSPACE/workdir
        tar -czvf $GITHUB_WORKSPACE/packages/fcitx5-hazkey-${{ github.ref_name }}-x86_64.tar.gz ./usr

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fcitx5-hazkey-x86_64
        path: ${{ github.workspace }}/packages/*